# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Deploy backend to Firebase Cloud Functions

on:
  push:
    branches: [ "23-full-ci-cd", "main" ]

permissions:
  contents: read

jobs:
  check-server-changes:
    runs-on: ubuntu-latest
    outputs:
      cantSkip: ${{ steps.check.outputs.result }}
    steps:
      - uses: actions/checkout@v3
      - id: check-skip
        name: Check if we can skip server building
        uses: dorny/paths-filter@v2
        with:
          filters: |
            server:
              - 'server/**'
      - name: Check Commit Message
        id: check-commit
        uses: Legorooj/skip-ci@main
        with:
          pattern: \[build-server\]
      - name: Combine check results
        id: check
        run: if [ "${{ steps.check-skip.outputs.server }}" = "true" ]; then echo "result=true"; elif [ "${{ steps.check-commit.outputs.canSkip }}" = "true" ]; then echo "result=true"; else echo "result=false"; fi > "$GITHUB_OUTPUT"
  build_server:
    runs-on: ubuntu-latest
    needs: check-server-changes
    if: ${{ needs.check-server-changes.outputs.cantSkip == 'true' }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Set up local venv
      run: |
        cd server 
        python3.11 -m venv venv
        source venv/bin/activate
        echo "VIRTUAL ENV:" $VIRTUAL_ENV
        pip install --upgrade pip
        pip install -r requirements.txt
    - name: Package server dir
      run: cd .. && zip -r server.zip server
    - name: Upload server dir
      uses: actions/upload-artifact@v3
      with:
        name: server
        path: server.zip
        retention-days: 1
  deploy:
    runs-on: ubuntu-latest
    needs: build_server
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Download Server Artifact
      uses: actions/download-artifact@v3
      with:
        name: server
    - name: Some debug
      run: pwd && ls server
    - name: Get the access files
      id: create-json
      uses: jsdaniell/create-json@v1.2.2
      with:
        name: ".firebase.json"
        json: ${{ secrets.FIREBASE_TOKEN_FILE }}
        dir: 'server/'
    - name: Activate the venv
      run: chmod +x server/venv/bin/activate && source server/venv/bin/activate
    - uses: ProgrammerPeter2/deploy-firebase-functions@main
      name: Deploy Firebase
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}
        FIREBASE_PROJECT: engame-quiz-ea63a
